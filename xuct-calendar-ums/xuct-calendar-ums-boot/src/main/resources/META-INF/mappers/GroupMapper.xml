<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.xuct.calendar.ums.boot.mapper.GroupMapper">


    <select id="findGroupCountByMember" resultType="cn.com.xuct.calendar.ums.api.dto.GroupInfoDto">
        select g.id,
               g.name,
               g.images,
               g.member_id as createMemberId,
               g.power,
               m.name      as createMemberName,
               mg.count,
               g.password,
               g.num
        from sys_group g
                 inner join (select count(1) as count , group_id
                             from sys_member_group
                             where group_id in (select group_id from sys_member_group where member_id = #{memberId}
                               and status = 'NORMAL')
                             group by group_id) mg on g.id = mg.group_id
                 left join sys_member m on g.member_id = m.id

    </select>

    <select id="getGroupCountByGroupId" resultType="cn.com.xuct.calendar.ums.api.dto.GroupInfoDto">
        select g.id,
               g.name,
               g.images,
               g.power,
               mg.count,
               g.member_id as createMemberId,
               g.power,
               m.name      as createMemberName,
               g.password,
               g.num
        from sys_group g
                 left join (select group_id, count(1) as count
                            from sys_member_group
                            where group_id = #{id}
                            group by group_id) mg on g.id = mg.group_id
                 left join sys_member m on g.member_id = m.id
        where 1 = 1
          and g.id = #{id}

    </select>

    <select id="findGroupBySearch" resultType="cn.com.xuct.calendar.ums.api.dto.GroupInfoDto">
        select g.id, g.name, g.images, g.member_id as createMemberId, s.name as createMemberName , if(isnull(g.password),0,1) as hasPasswordJoin
        from sys_group g
                 left join sys_member s on g.member_id = s.id
        where 1 = 1
          and g.power = 'PUBLIC'
          and g.name LIKE CONCAT(CONCAT('%', #{word}), '%')
          and g.member_id &lt;&gt; #{memberId}
    </select>


    <select id="mineApplyGroup" resultType="cn.com.xuct.calendar.ums.api.dto.GroupInfoDto">
        select s.id, s.name, s.member_id as createMemberId, m.name as createMemberName, mg.member_id
        from sys_member_group mg
                 left join sys_group s on mg.group_id = s.id
                 left join sys_member m on mg.member_id = m.id
        where 1 = 1
          and mg.member_id = #{memberId}
          and mg.status = 'APPLY'
    </select>

    <select id="applyMineGroup" resultType="cn.com.xuct.calendar.ums.api.dto.GroupInfoDto">
        select s.id, s.name, s.member_id as createMemberId, m.name as createMemberName, mg.member_id
        from sys_member_group mg
                 left join sys_group s on mg.group_id = s.id
                 left join sys_member m on mg.member_id = m.id
        where 1 = 1
          and s.member_id = #{memberId}
          and mg.status = 'APPLY'
    </select>

    <update id="applyAgreeJoinGroup">
        update sys_member_group
        set status = 'NORMAL'
        where 1 = 1
          and group_id = #{groupId}
          and member_id = #{memberId}
          and mg.status = 'APPLY'

    </update>

    <delete id="applyRefuseJoinGroup">
        delete
        from sys_member_group
        where 1 = 1
          and group_id = #{groupId}
          and member_id = #{memberId}
          and mg.status = 'APPLY'
    </delete>

</mapper>