<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.xuct.calendar.ums.boot.mapper.MemberMessageMapper">


    <resultMap id="jsonResult" type="cn.com.xuct.calendar.ums.api.entity.MemberMessage">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="operation" jdbcType="INTEGER" property="operation"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="content" property="content"
                typeHandler="cn.com.xuct.calendar.ums.api.handler.JsonObjectTypeHandler"/>
    </resultMap>


    <select id="pages" resultType="cn.com.xuct.calendar.ums.api.entity.MemberMessage" resultMap="jsonResult">
        select id, create_time, member_id, type, status, operation, content
        from sys_member_message
        where 1 = 1
        and member_id = #{memberId}
        <if test="status != null and status != 2">
            and status = #{status}
        </if>
        <choose>
            <when test="sort != null and sort == 1">
                order by create_time desc
            </when>
            <when test="sort != null and sort == 2">
                order by type asc, status desc
            </when>
            <otherwise>
                order by status asc, create_time desc
            </otherwise>
        </choose>

        limit #{page}, #{limit}
    </select>
</mapper>